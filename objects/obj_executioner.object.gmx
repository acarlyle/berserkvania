<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_executionerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>print('EXECUTIONER_BOSS_CREATE\n');

m_busy = false;

m_numSpiral = 1;

m_xFireBallOffset = 10;
m_yFireBallOffset = -30;
m_fireBallHspd = 3;
m_fireBallVspd = 0;
m_projectileAngle = 90;
doingSomething = false;

//spawn blocks
for (var xx = 0; xx &lt; 3200; xx+=16){
    instance_create(xx, 888, obj_solid8x1);
}  

//spawn torches
for (var yy = 390; yy &lt; 900; yy += 180){
    for (var xx = 0; xx &lt; 3200; xx += 160){
        instance_create(xx, yy, obj_torch);
    }  
}

//spawn water
for (var xx = 0; xx &lt; 3200; xx+=16){
    instance_create(xx, 888, obj_water);
    instance_create(xx, 904, obj_water);
    
}

//instance_create(0, 880, obj_water);
//with(obj_water){
//    image_xscale += 200;
//} 



var idX = instance_position(0, 888, obj_solid1x1);
if (idX) {
    print(idX);
}

alarm[0] = room_speed * 2; //idle 
m_state = exec_idle;

//Blood System
partBlood_sys = part_system_create();

//Blood Particle
partBlood = part_type_create();
part_type_shape(partBlood,pt_shape_line);
part_type_size(partBlood,0.2,0.3,0,0);
part_type_color2(partBlood, c_maroon, c_red);
part_type_alpha2(partBlood,.5,.1);
part_type_gravity(partBlood,0.1,270);
part_type_speed(partBlood,0.5,0.5,0,0);
part_type_direction(partBlood,290,290,0,1);
part_type_orientation(partBlood,270,270,0,0,0);
part_type_life(partBlood,20,60);

/*
//Puddle Particle
partPuddle = part_type_create();
part_type_shape(partPuddle,pt_shape_circle);
part_type_size(partPuddle,0.5,0.8,.01,0);
part_type_scale(partPuddle,.5,.1);
part_type_color1(partPuddle,c_silver);
part_type_alpha2(partPuddle,.4,0);
part_type_speed(partPuddle,0,0,0,0);
part_type_direction(partPuddle,0,0,0,0);
part_type_gravity(partPuddle,0,270);
part_type_life(partPuddle,50,60);
*/

////Set Sequence
//part_type_death(partBlood,1,partPuddle);

//Create Emitter
partBlood_emit = part_emitter_create(partBlood_sys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///END SPIRAL
show_debug_message("END SPIRAL");
m_busy = false;
alarm[1] = -1;

m_state=exec_idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPIRAL ATTACK RECURSIVE ALARM

var dir = 0;
var spd = 1;

switch (m_numSpiral){
    case 1:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 3;
        m_fireBallVspd = 0;
        dir = 0;
        m_numSpiral++;
        break;
    case 2:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 2;
        m_fireBallVspd = 2;
        dir = 315;
        m_numSpiral++;
        break;
    case 3:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 0;
        m_fireBallVspd = 3;
        dir = 270;
        m_numSpiral++;
        break;
    case 4:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = -2;
        m_fireBallVspd = 2;
        dir = 225;
        m_numSpiral++;
        break;
    case 5:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = -3;
        m_fireBallVspd = 0;
        dir = 180;
        m_numSpiral++;
        break;
    case 6:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = -2;
        m_fireBallVspd = -2;
        dir = 135;
        m_numSpiral++;
        break;
    case 7:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 0;
        m_fireBallVspd = -3;
        dir = 90;
        m_numSpiral++;
        break;
    case 8:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 2;
        m_fireBallVspd = -2;
        dir = 45;
        m_numSpiral++;
        break;
        
    //loop back around in position shifted to the right 
        
    case 9:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 2;
        m_fireBallVspd = 2;
        dir = 337.5;
        m_numSpiral++;
        break;
    case 10:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 2;
        m_fireBallVspd = 2;
        dir = 292.5;
        m_numSpiral++;
        break;
    case 11:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 0;
        m_fireBallVspd = 3;
        dir = 247.5;
        m_numSpiral++;
        break;
    case 12:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = -2;
        m_fireBallVspd = 2;
        dir = 202.5;
        m_numSpiral++;
        break;
    case 13:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = -3;
        m_fireBallVspd = 0;
        dir = 157.5;
        m_numSpiral++;
        break;
    case 14:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = -2;
        m_fireBallVspd = -2;
        dir = 112.5;
        m_numSpiral++;
        break;
    case 15:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 0;
        m_fireBallVspd = -3;
        dir = 67.5;
        m_numSpiral++;
        break;
    case 16:
        m_xFireBallOffset = 0;
        m_yFireBallOffset = -35;
        m_fireBallHspd = 2;
        m_fireBallVspd = -2;
        dir = 22.5;
        m_numSpiral = 1;
        break;
}
//m_numSpiral++;
//print(m_numSpiral);

fireball = instance_create(x + m_xFireBallOffset, y + m_yFireBallOffset, obj_fireball);
fireball.m_hspd = obj_executioner.m_fireBallHspd;
fireball.m_vspd = obj_executioner.m_fireBallVspd;
fireball.m_dir = dir;
fireball.m_spd = spd;
//fireball.image_angle = dir;

//print(fireball.m_hspd);
//}

alarm[1] = room_speed/16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_executioner;

m_busy = false;
m_state = exec_attackSpiral;
show_debug_message("ATTACK SPIRAL");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///boss logic

/*var left = keyboard_check(vk_left);
var right = keyboard_check(vk_right);

if (obj_player.phy_position_x &gt; 224 &amp;&amp; right){
    print('mabey me scurby the curvy');
    for (var xx = 32; xx &lt; 288; xx+=16){
        instance_destroy(instance_position(xx, 528, obj_solid1x1));
        
    }  
    for (var xx = 48; xx &lt; 304; xx+=16){
        instance_create(xx, 528, obj_solid1x1);
    }  
}*/

//Update Emitter
//part_emitter_region(partBlood_sys,partBlood_emit,view_xview[0]-400,view_xview[0]+view_wview[0],view_yview[0]-100, view_yview[0]-100,ps_shape_line,ps_distr_linear);
part_emitter_region(partBlood_sys,partBlood_emit,x,x,y-26, y,ps_shape_line,ps_distr_linear);
part_emitter_burst(partBlood_sys,partBlood_emit,partBlood,1);

if (!m_busy){
    if (x &lt; obj_player.x){
        x += 1;
    }
    else{
        x -= 1;
    }
    show_debug_message("EXECUTING THING");
    script_execute(m_state);
    m_busy = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
